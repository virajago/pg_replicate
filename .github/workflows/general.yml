name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Linting
        run: cargo clippy -- -D warnings

  coverage:
    name: Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5430:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5430; do
            echo "Waiting for Postgres..."
            sleep 1
          done

      - name: Enable logical WAL
        run: |
          PGPASSWORD=postgres psql -h localhost -p 5430 -U postgres -c "ALTER SYSTEM SET wal_level = 'logical';"

      - name: Restart Postgres service container
        run: |
          docker restart ${{ job.services.postgres.id }}

      - name: Install sqlx-cli
        run: |
          cargo install sqlx-cli \
            --features native-tls,postgres \
            --no-default-features \
            --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        id: coverage
        run: |
          cargo llvm-cov test \
            --workspace --no-fail-fast \
            --lcov --output-path lcov.info

      - name: Coveralls upload
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
          debug: true

  docker:
    name: Docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push api image
        uses: docker/build-push-action@v6
        with:
          file: ./api/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/api:${{ github.head_ref || github.ref_name }}.${{ github.sha }}
      - name: Build and push replicator image
        uses: docker/build-push-action@v6
        with:
          file: ./replicator/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/replicator:${{ github.head_ref || github.ref_name }}.${{ github.sha }}